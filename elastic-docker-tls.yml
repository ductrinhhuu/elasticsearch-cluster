version: '2.2'

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - index.store.type=mmapfs      
      - node.master=true
      - node.data=false
      - node.ingest=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - path.repo=/mnt/repo
      - reindex.remote.whitelist=[18.136.25.238:9200, 118.69.153.6:9220]
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD 
      - xpack.license.self_generated.type=trial 
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true 
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true 
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
      - snapshot:/mnt/repo
    networks:
      - elastic

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - index.store.type=mmapfs
      - node.master=true
      - node.data=false
      - node.ingest=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - path.repo=/mnt/repo
      - reindex.remote.whitelist=[18.136.25.238:9200, 118.69.153.6:9220]
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es02/es02.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es02/es02.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
      - snapshot:/mnt/repo
    networks:
      - elastic

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - index.store.type=mmapfs
      - node.master=true
      - node.data=false
      - node.ingest=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - path.repo=/mnt/repo
      - reindex.remote.whitelist=[18.136.25.238:9200, 118.69.153.6:9220]
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es03/es03.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es03/es03.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es03/es03.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es03/es03.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
      - snapshot:/mnt/repo
    networks:
      - elastic

  es04:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es04
    environment:
      - node.name=es04
      - index.store.type=mmapfs
      - indices.memory.index_buffer_size=30%
      - node.master=false
      - node.data=true
      - node.ingest=false
      - discovery.seed_hosts=es01,es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - path.repo=/mnt/repo
      - reindex.remote.whitelist=[18.136.25.238:9200, 118.69.153.6:9220]
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es04/es04.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es04/es04.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es04/es04.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es04/es04.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data04:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
      - snapshot:/mnt/repo
    networks:
      - elastic

  esingest:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: esingest
    environment:
      - node.name=esingest
      - index.store.type=mmapfs
      - node.master=false
      - node.data=false
      - node.ingest=true
      - discovery.seed_hosts=es01,es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.port=9220
      - path.repo=/mnt/repo
      - reindex.remote.whitelist=[18.136.25.238:9200,118.69.153.6:9220]
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/esingest/esingest.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/esingest/esingest.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/esingest/esingest.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/esingest/esingest.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - dataingest:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
      - snapshot:/mnt/repo      
    ports: 
      - 9220:9220
    networks:
      - elastic

# tag::kibana-config[]
  kib01:
    image: docker.elastic.co/kibana/kibana:7.5.1
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      SERVERNAME: localhost
      ELASTICSEARCH_URL: https://esingest:9220
      ELASTICSEARCH_HOSTS: https://esingest:9220
      ELASTICSEARCH_USERNAME: kibana
      ELASTICSEARCH_PASSWORD: o6DgCTzsJGZHACVAeHK4
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: $CERTS_DIR/ca/ca.crt
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY: $CERTS_DIR/kib01/kib01.key
      SERVER_SSL_CERTIFICATE: $CERTS_DIR/kib01/kib01.crt
    volumes:
      - certs:$CERTS_DIR
      - kibana:/usr/share/kibana
    networks:
      - elastic
# end::kibana-config[]
volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  data04:
    driver: local
  dataingest:
    driver: local
  snapshot:
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/repo'
  certs:
    driver: local
  kibana:
    driver: local

networks:
  elastic:
    driver: bridge
